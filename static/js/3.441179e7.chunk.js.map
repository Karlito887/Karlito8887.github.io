{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfilestatuWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","s","img","src","alt","avatarBig","photos","large","userDefaultPhoto","aboutMe","fullName","Preloader","Post","item","avatar","message","likeCount","likes","like","MyPosts","React","memo","console","log","postElements","posts","map","p","key","id","wrapper","AddPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","profilePage","postData","messageText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.441179e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1cK5H\",\"avatarBig\":\"ProfileInfo_avatarBig__1QUoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3OcjE\",\"active\":\"Post_active__i-6EL\",\"avatar\":\"Post_avatar__1AKHH\",\"like\":\"Post_like__1jU1G\",\"likeCount\":\"Post_likeCount__1ygw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__1Vzvv\"};","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n        debugger\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status\r\n                        || '------'}</span>\r\n                </div>\r\n                : <div>\r\n                    <input onChange={onStatusChange} autoFocus={true}\r\n                        onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../../assets/images/preloader/Preloader'\r\nimport userDefaultPhoto from '../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from './ProfilestatuWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <img className={s.img} src=\"https://cdn.pixabay.com/photo/2020/04/05/21/02/panoramic-5007742_960_720.jpg\" alt='img' />\r\n\r\n            {/* <img className={s.avatarBig} src=\"https://cdn.pixabay.com/photo/2017/05/06/18/12/avatar-2290470_960_720.jpg\" alt=\"\" /> */}\r\n            <img className={s.avatarBig} src={!props.profile.photos.large ? userDefaultPhoto : props.profile.photos.large} alt=\"\" />\r\n            <div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                <span>Обо мне:{props.profile.aboutMe}</span>\r\n                <span>Имя: {props.profile.fullName}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avatar} src=\"https://cdn.pixabay.com/photo/2017/05/06/18/12/avatar-2290470_960_720.jpg\" alt=\"\"/>\r\n        <p>{props.message}</p>\r\n    <p className={s.likeCount}>{props.likes}</p>\r\n        <div className={s.like}>Like</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('render')\r\n    let postElements = props.posts.map( (p) => <Post message={p.message} likes={p.likes} key={p.id} /> )\r\n\r\n    const onSubmit = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onSubmit} />\r\n            {postElements}\r\n        </div>\r\n    )\r\n})\r\n \r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newPostText'}\r\n                validate={[required, maxLength10]}/>\r\n            <button >Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'addPost' })(AddPostForm)\r\n\r\nexport default MyPosts","// import React from 'react'\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postData,\r\n        messageText: state.profilePage.messageText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))},\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\n// import s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}