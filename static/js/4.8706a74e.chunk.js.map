{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","s","dialogs__item","avatar","src","alt","to","name","Message","messages__item","message","maxLength","maxLengthCreator","DialogsReduxForm","reduxForm","form","formSendMessage","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","dialogElements","dialogData","map","d","key","messageElements","messageData","m","wrapperDilogs","dialogs","messages","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagesPage","messageText","dispatch","sendMeassageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,0B,+FCa3IC,EATA,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,eACd,yBAAKF,UAAWC,IAAEE,OAAQC,IAAI,4EAA4EC,IAAI,KAC9G,kBAAC,IAAD,CAASC,GAAIR,GAAOD,EAAMU,QCDvBC,EALC,SAACX,GACb,OACI,yBAAKG,UAAWC,IAAEQ,gBAAiBZ,EAAMa,U,iCCyB3CC,EAAYC,YAAiB,IAS7BC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAPL,SAACjB,GACjB,OAAO,0BAAMG,UAAWC,IAAEe,gBAAiBC,SAAUpB,EAAMqB,cACvD,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUd,KAAK,iBAAiBe,SAAU,CAACC,IAAUZ,KACvE,oDAMOa,EAjCC,SAAC3B,GACb,IAAI4B,EAAiB5B,EAAM6B,WAAWC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQrB,KAAMqB,EAAErB,KAAMR,GAAI6B,EAAE7B,GAAI8B,IAAKD,EAAE7B,QAClF+B,EAAkBjC,EAAMkC,YAAYJ,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAEjC,QAOvF,OACI,yBAAKC,UAAWC,IAAEgC,eACd,yBAAKjC,UAAWC,IAAEiC,SACbT,GAEL,yBAAKzB,UAAWC,IAAEkC,UACbL,EACD,kBAACjB,EAAD,CAAkBI,SAZb,SAACmB,GACdvC,EAAMwC,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,S,gDCX1BC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,OCiBRE,sBACXC,aAfoB,SAACJ,GACrB,MAAO,CACHd,WAAYc,EAAMK,aAAanB,WAC/BK,YAAaS,EAAMK,aAAad,YAChCe,YAAaN,EAAMK,aAAaC,gBAIf,SAACC,GACtB,MAAO,CACHV,YAAa,SAACC,GAAD,OAAoBS,EAASC,YAA0BV,UDV5C,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKtD,MAAM4C,OAER,kBAACQ,EAAcE,KAAKtD,OAFG,kBAAC,IAAD,CAAUS,GAAG,eAHR,GACX8C,IAAMH,WAStC,OAFmCL,YAAQL,EAARK,CAAoCM,KCM5DP,CAGbnB","file":"static/js/4.8706a74e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperDilogs\":\"Dialogs_wrapperDilogs__3U9ZY\",\"dialogs__item\":\"Dialogs_dialogs__item__2IWa5\",\"active\":\"Dialogs_active__MXWDW\",\"avatar\":\"Dialogs_avatar__3cSWO\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Dialog = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialogs__item}>\r\n            <img className={s.avatar} src=\"https://cdn.pixabay.com/photo/2017/05/06/18/12/avatar-2290470_960_720.jpg\" alt=\"\" />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialog","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.messages__item}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogData.map(d => <Dialog name={d.name} id={d.id} key={d.id}/>)\r\n    let messageElements = props.messageData.map((m) => <Message message={m.message} key={m.id} />)\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessage(values.newMessageText)\r\n        values.newMessageText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapperDilogs}>\r\n            <div className={s.dialogs}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <DialogsReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form className={s.formSendMessage} onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='newMessageText' validate={[required, maxLength]} />\r\n        <button>Send message</button>\r\n    </form>\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsForm)\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","// import React from 'react'\r\nimport { sendMeassageActionCreator } from '../../redux/message-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogData: state.messagesPage.dialogData,\r\n        messageData: state.messagesPage.messageData,\r\n        messageText: state.messagesPage.messageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => dispatch(sendMeassageActionCreator(newMessageText)),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)"],"sourceRoot":""}